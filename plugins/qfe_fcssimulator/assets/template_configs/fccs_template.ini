#==========================================================================#
#== TEMPLATE FOR 2-COLOR-FCCS in DIFFUSION4                              ==#
#==========================================================================#



##################################################################
# Final object-layout for 2-color FCCS simulation
##################################################################
#
#  green monomers:
#     brownian2 -------------+----------> 
#                            |   +------> fcs1 (green detection)    ==> green ACF
#  red monomers:             |   |  +--->        ^
#     brownian3 -----------------+  |            |
#                            |   |  |            | FCCS-partners
#  green-red dimers:         |   |  |            |
#     brownian1 -> child1 ----------+            |
#                            |   |  |            |
#                            |   |  +-------->   v
#                            |   +-----------> fcs2 (red detection) ==> red ACF
#                            +--------------->                      ==> red-green CCF
#                                   
#
#
##################################################################

##################################################################
# simulation setup
##################################################################
# random number generator for simulation
simulation.rng=taus2
# duration of the simulation in seconds
simulation.duration=0.1
# simulation timestep in seconds
simulation.timestep=1e-6
# prefix for all output files tosystempathseparator() converts \ and / to your locally valid filename separator
simulation.basename=tosystempathseparator(".\diffusion4_test\")

##################################################################
# setup all brownian objects ("supergroup")
##################################################################
# spherical volume with 5 micrometer radius
brownian.volume_shape=sphere 
brownian.sim_radius=5
# if not specified differently, 2nM fluorophores in the sim-box
brownian.c_fluor=2
# fluorophore is al488
brownian.init_fluorophor=atto488
# no rotational diffusion
brownian.use_rotational_diffusion=false
# specify if, for how many steps and with which resolution to save MSDs
brownian.save_msd_every_n_timesteps=10
brownian.msd_size=1000
# number of independent fluorophores on each walker
brownian.n_fluorophores=1


##################################################################
# setup all fcs objects ("supergroup")
##################################################################
# resolution of the "FCS-data acquisition", i.e. 2*simulation.timestep to accumulate two trajectory timesteps
fcs.corr_taumin=simulation.timestep*2
# setup correlator
fcs.correlator_type=0
fcs.corr_S=20           # number of linear correlators
fcs.corr_m=2            # overlap of two subsequent correlators -> Dt[i+1]=corr_m*Dt[i]
fcs.corr_P=16           # bins per linear correlator
# laser-power for illumination (at peak position in focus)
fcs.P0=150  # laser power in microWatt on circle with r=2*psf_r0
# wavelength of excitation light
fcs.lambda_ex=488  # laser wavelength in nanometers
# excitation volume size
fcs.expsf_r0=0.23*sqrt(2) # 1/e^2 width of excitation volume
fcs.expsf_z0=6*fcs.expsf_r0 # 1/e^2 width of excitation volume
# excitation volume position (0,0,0 = in the center of the sim-box)
fcs.ex_x0=0
fcs.ex_y0=0
fcs.ex_z0=0
# set properties of second excitation focus (then it is possible to simulate cross-talk and FCCS!)
fcs.P02=150  # laser power in microWatt on circle with r=2*psf_r0
fcs.lambda_ex2=568  # laser wavelength in nanometers
fcs.expsf_r02=0.3*sqrt(2) # 1/e^2 width of detection volume
fcs.expsf_z02=6*fcs.expsf_r02 # 1/e^2 width of detection volume
fcs.ex_x02=0
fcs.ex_y02=0
fcs.ex_z02=0

# detection volume size
fcs.detpsf_r0=fcs.expsf_r0
fcs.detpsf_z0=fcs.expsf_z0
# position of detection volume
fcs.img_x0=0
fcs.img_y0=0
fcs.img_z0=0
# detection efficiency
fcs.q_det=1
# save binned count-rate with given resolution (also stored in FCS-files)
fcs.save_binning=true
fcs.save_binning_time=max(fcs.corr_taumin, simulation.duration/1000)



##################################################################
# create a brownian-motion trajectory-source object "brownian1"
##################################################################
# Note: all non-mentioned properties either default, or from supergroup "brownian"
# these walkers will be (together with child1) the AB-dimers
# diffusion coefficient in micrometer^2/second
brownian1.diff_coeff=10
# the concentration of dimer will be 5nM
brownian1.c_fluor=3
#fluorophore is al488
brownian1.init_fluorophor=al488



##################################################################
# create a child-dynamics trajectory-source object "child1"
##################################################################
# Note: all non-mentioned properties either default, or from supergroup "brownian"
# This objects takes the walkers from brownian1 (al488) and adds a second
# fluorophore al594. The original fluorophore is not visible, otherwise there would be
# two al594 for each walker in brownian1.
# so if a detectio object sourses soruces=brownian1,child1 it sees an al488-al594 pair 
# co-diffusing, which is effectively a dimer.
child1.parent=brownian1
child1.n_fluorophores=2
child1.additional_walker_position_mode=same
child1.initial_walker_visible=false
child1.init_fluorophor=al594


##################################################################
# create a brownian-motion trajectory-source object "brownian2"
##################################################################
# Note: all non-mentioned properties either default, or from supergroup "brownian"
# these walkers will be the A-monomers (green-only)
# diffusion coefficient in micrometer^2/second
brownian2.diff_coeff=10
# the concentration of green monomers will be 1nM
brownian2.c_fluor=1
# fluorophore is al488
brownian2.init_fluorophor=al488

##################################################################
# create a brownian-motion trajectory-source object "brownian3"
##################################################################
# Note: all non-mentioned properties either default, or from supergroup "brownian"
# these walkers will be the B-monomers (red-only)
# diffusion coefficient in micrometer^2/second
brownian3.diff_coeff=10
# the concentration of green monomers will be 1nM
brownian3.c_fluor=1
# fluorophore is al594
brownian3.init_fluorophor=al594


##################################################################
# create an FCS trajectory-sinc object "fcs1"
##################################################################
# Note: all non-mentioned properties either default, or from supergroup "fcs"
# This object will represent the green detection channel!
# sources are the sources of trajectories that are detected by fcs1 ... comma-separated list
# basically these are all particles (A,B,AB)
fcs1.sources=brownian1,child1,brownian2,brownian3
# a custom name for this object. This name is also used as part of the output file names!
fcs1.object_name="cAB"+floattostr(brownian1.c_fluor)+"_cA"+floattostr(brownian2.c_fluor)+"_cB"+floattostr(brownian3.c_fluor)+"_D"+floattostr(brownian1.diff_coeff)+"_greendet"
# we use two lasers for escitation @ 488nm and 594nm:
fcs1.lambda_ex=488
fcs1.lambda_ex2=568
# detection band is 500-550nm, i.e. the green channel
fcs1.det_wavelength_min=500
fcs1.det_wavelength_max=550
fcs1.object_name="cAB"+floattostr(brownian1.c_fluor)+"_cA"+floattostr(brownian2.c_fluor)+"_cB"+floattostr(brownian3.c_fluor)+"_red_detection"

##################################################################
# create an FCS trajectory-sinc object "fcs2"
##################################################################
# Note: all non-mentioned properties either default, or from supergroup "fcs"
# This object will represent the red detection channel!
# sources are the sources of trajectories that are detected by fcs1 ... comma-separated list
# basically these are all particles (A,B,AB)
fcs2.sources=fcs1.sources
# a custom name for this object. This name is also used as part of the output file names!
fcs2.object_name="cAB"+floattostr(brownian1.c_fluor)+"_cA"+floattostr(brownian2.c_fluor)+"_cB"+floattostr(brownian3.c_fluor)+"_D"+floattostr(brownian1.diff_coeff)+"_reddet"
# we use two lasers for escitation @ 488nm and 594nm:
fcs2.lambda_ex=488
fcs2.lambda_ex2=568
# detection band is 600-800nm, i.e. the green channel
fcs2.det_wavelength_min=600
fcs2.det_wavelength_max=800
# we now also partner these two objects for FCCS-detection:
fcs2.fccs_partner=fcs1




##################################################################
# create an FCS trajectory-sinc object "fcs3"
##################################################################
# Note: all non-mentioned properties either default, or from supergroup "fcs"
# This object will represent the green detection channel!
# sources are the sources of trajectories that are detected by fcs1 ... comma-separated list
# basically these are only the monomers particles (A,B)
fcs3.sources=brownian2,brownian3
# a custom name for this object. This name is also used as part of the output file names!
fcs3.object_name="cAB0_cA"+floattostr(brownian2.c_fluor)+"_cB"+floattostr(brownian3.c_fluor)+"_D"+floattostr(brownian1.diff_coeff)+"_greendet"
# we use two lasers for escitation @ 488nm and 594nm:
fcs3.lambda_ex=488
fcs3.lambda_ex2=568
# detection band is 500-550nm, i.e. the green channel
fcs3.det_wavelength_min=500
fcs3.det_wavelength_max=550
fcs3.object_name="cAB0_cA"+floattostr(brownian2.c_fluor)+"_cB"+floattostr(brownian3.c_fluor)+"_red_detection"

##################################################################
# create an FCS trajectory-sinc object "fcs4"
##################################################################
# Note: all non-mentioned properties either default, or from supergroup "fcs"
# This object will represent the red detection channel!
# sources are the sources of trajectories that are detected by fcs1 ... comma-separated list
# basically these are only the monomers particles (A,B)
fcs4.sources=fcs3.sources
# a custom name for this object. This name is also used as part of the output file names!
fcs4.object_name="cAB0_cA"+floattostr(brownian2.c_fluor)+"_cB"+floattostr(brownian3.c_fluor)+"_D"+floattostr(brownian1.diff_coeff)+"_reddet"
# we use two lasers for escitation @ 488nm and 594nm:
fcs4.lambda_ex=488
fcs4.lambda_ex2=568
# detection band is 600-800nm, i.e. the green channel
fcs4.det_wavelength_min=600
fcs4.det_wavelength_max=800
# we now also partner these two objects for FCCS-detection:
fcs4.fccs_partner=fcs3
